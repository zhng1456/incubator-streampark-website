"use strict";(self.webpackChunkapache_streampark_website=self.webpackChunkapache_streampark_website||[]).push([[8579],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(n),k=a,m=d["".concat(c,".").concat(k)]||d[k]||u[k]||o;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5875:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={id:"k8s-pvc-integration",title:"Kubernetes PVC Resource usage",sidebar_position:2},i=void 0,s={unversionedId:"flink-k8s/k8s-pvc-integration",id:"flink-k8s/k8s-pvc-integration",title:"Kubernetes PVC Resource usage",description:"Resource usage instructions of K8s PVC",source:"@site/docs/flink-k8s/2-k8s-pvc-integration.md",sourceDirName:"flink-k8s",slug:"/flink-k8s/k8s-pvc-integration",permalink:"/docs/flink-k8s/k8s-pvc-integration",draft:!1,editUrl:"https://github.com/apache/incubator-streampark-website/edit/dev/docs/flink-k8s/2-k8s-pvc-integration.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"k8s-pvc-integration",title:"Kubernetes PVC Resource usage",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Flink on K8s ",permalink:"/docs/flink-k8s/k8s-dev"},next:{title:"Hadoop resource integration",permalink:"/docs/flink-k8s/hadoop-resource-integration"}},c={},p=[{value:"Resource usage instructions of K8s PVC",id:"resource-usage-instructions-of-k8s-pvc",level:2}],l={toc:p};function u(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"resource-usage-instructions-of-k8s-pvc"},"Resource usage instructions of K8s PVC"),(0,a.kt)("p",null,"The support for pvc resource(mount file resources such as checkpoint/savepoint/logs and so on) is based on pod-template at current version\u3002"),(0,a.kt)("p",null,"Users do not have to concern the Native-Kubernetes Session.It will be processed when Session Cluster is constructed .Native-Kubernetes Application can be constructed by configuring on StreamPark webpage using ",(0,a.kt)("inlineCode",{parentName:"p"},"pod-template"),"\u3001",(0,a.kt)("inlineCode",{parentName:"p"},"jm-pod-template"),"\u3001",(0,a.kt)("inlineCode",{parentName:"p"},"tm-pod-template"),"."),(0,a.kt)("br",null),(0,a.kt)("p",null,"Here is a brief example. Two PVC ",(0,a.kt)("inlineCode",{parentName:"p"},"flink-checkpoint"),"\uff0c ",(0,a.kt)("inlineCode",{parentName:"p"},"flink-savepoint")," should be constructed in advance"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Kubernetes PVC",src:n(2026).Z,width:"2476",height:"1842"})),(0,a.kt)("p",null,"'pod-template' can be configured as below \uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-template\nspec:\n  containers:\n    - name: flink-main-container\n      volumeMounts:\n        - name: checkpoint-pvc\n          mountPath: /opt/flink/checkpoints\n        - name: savepoint-pvc\n          mountPath: /opt/flink/savepoints\n  volumes:\n    - name: checkpoint-pvc\n      persistentVolumeClaim:\n        claimName: flink-checkpoint\n    - name: savepoint-pvc\n      persistentVolumeClaim:\n        claimName: flink-savepoint\n")),(0,a.kt)("p",null,"There are three ways to provide the dependency when using ",(0,a.kt)("inlineCode",{parentName:"p"},"rocksdb-backend"),"."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Flink Base Docker Image contains the dependency\uff08user fix the dependency conflict by themself\uff09;")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Put the dependency ",(0,a.kt)("inlineCode",{parentName:"p"},"flink-statebackend-rocksdb_xx.jar")," to  the path ",(0,a.kt)("inlineCode",{parentName:"p"},"Workspace/jars")," in StreamPark ;")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Add the rockdb-backend dependency to StreamPark Dependency(StreamPark will fix the conflict automatically) \uff1a"),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("img",{alt:"rocksdb dependency",src:n(6454).Z,width:"1698",height:"926"})))),(0,a.kt)("br",null),(0,a.kt)("p",null,"We will provide a graceful way to generate pod-template configuration to simplify the procedure of k8s-pvc mounting in future version."))}u.isMDXComponent=!0},2026:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/k8s_pvc-cdeee4dafe036102e017aad3b6c13f5d.png"},6454:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/rocksdb_dependency-932be3682bef8d8cd169522c00cfd12b.png"}}]);